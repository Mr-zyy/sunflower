(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./node_modules/raw-loader/dist/cjs.js!./examples/sunflower-antd-form-table/Example2.jsx":function(n,e,l){"use strict";l.r(e),e.default='import React, { useState } from \'react\';\nimport { useFormTable } from \'@sunflower-antd/form-table\';\nimport { Input, Button, Row, Col, Alert, Select } from \'antd\';\nimport request from \'./request\';\n\n\nexport default () => {\n  const {\n    Form,\n    Table,\n    form,\n    responseData,\n    defaultFormValuesLoading,\n  } = useFormTable({\n    search(values) {\n      console.log(\'request values\', values);\n      return request(values);\n    },\n    defaultFormValues: () => {\n      return new Promise(r => setTimeout(() => {\n        r({\n          field5: \'jack\',\n          username: \'a\',\n        });\n      }, 2000));\n    },\n  });\n\n  const [bordered, toggleTableBordered] = useState(false);\n\n  const formItemLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  return <div>\n    {\n      defaultFormValuesLoading && \'defaultFormValuesLoading...\'\n    }\n    <Form {...formItemLayout}>\n      <Row>\n        <Col span={8}>\n          <Form.Item\n            label="Username"\n            name="username"\n            rules={[{ required: true, message: \'Please input\' }]}\n          >\n            <Input placeholder="Username" onChange={e => {\n              console.log(e.target.value);\n            }} />\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item\n            label="Field 1"\n            name="field1"\n          >\n            <Input placeholder="Field 1" />\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item\n            label="Field 2"\n            name="field2"\n          >\n            <Input placeholder="Field 2" />\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item\n            label="Field 3"\n            name="field3"\n          >\n            <Input placeholder="Field 3" />\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item\n            label="Field 4"\n            name="field4"\n          >\n            <Input placeholder="Field 4" />\n          </Form.Item>\n        </Col>\n\n        <Col span={8}>\n          <Form.Item\n            label="Field 5"\n            name="field5"\n          >\n            <Select>\n              <Select.Option value="jack">Jack</Select.Option>\n              <Select.Option value="lucy">Lucy</Select.Option>\n            </Select>\n          </Form.Item>\n        </Col>\n\n        <Col span={24} style={{ textAlign: \'right\' }}>\n          <Button style={{marginRight: 12}} onClick={() => form.resetFields()}>\n            reset\n          </Button>\n          <Button type="primary" htmlType="submit">\n            Search\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n\n    <div style={{ marginBottom: 20 }}>\n      <Button onClick={() => toggleTableBordered(!bordered)}>\n        change table bordered\n      </Button>\n    </div>\n\n    <Alert\n      message={`total num: ${responseData.total || 0}`}\n      style={{marginBottom: 20}}\n    />\n\n    <Table\n      columns={[\n        {\n          title: \'Username\',\n          dataIndex: \'username\',\n          key: \'username\',\n        },\n        {\n          title: \'Email\',\n          dataIndex: \'email\',\n          key: \'email\',\n        },\n      ]}\n      rowKey="id"\n      bordered={bordered}\n    />\n\n  </div>;\n};\n'}}]);