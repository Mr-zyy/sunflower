(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./docs/index.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var o=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(n("react"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},i="wrapper";function r(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)(i,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"overview"},"Overview"),Object(a.b)("h2",{id:"--what-is-sunflower"},"\ud83c\udf3b","\xa0"," What is Sunflower"),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Sunflower is a library based on antd and react-hooks, it provides common business processes through hooks. In addition, sunflower provides a more convenient way to combine this process with antd ui components."),Object(a.b)("h2",{id:"--features"},"\ud83c\udfa9","\xa0"," Features"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\ud83c\udfc4  Easy to use. You don't need to know too much about state and change methods to use components with interaction logic."),Object(a.b)("li",{parentName:"ul"},"\ud83d\udc85 Easy to customize. You can easily customize the combination of components you need."),Object(a.b)("li",{parentName:"ul"},"\ud83d\udc6f Layered design. You can use react-hooks without ui or react-hooks with antd."),Object(a.b)("li",{parentName:"ul"},"\ud83e\udd3e\u200d\u2642\ufe0fHooks return HOC. Crazy, but it does give you a more convenient api. At the same time you can choose not to use.")),Object(a.b)("h2",{id:"--why"},"\ud83e\udd14","\xa0"," Why?"),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Usually, we use multiple component components of antd, and we organize their relationship through state and props methods like ",Object(a.b)("inlineCode",{parentName:"p"},"value"),", ",Object(a.b)("inlineCode",{parentName:"p"},"onChange"),"."),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Is there a way to reduce the process code and describe the relationship between multiple ui components? How can we use a way to precipitate existing processes?"),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Yes,we can use react-hooks, so the relationship between multiple antd components will be in react-hooks.Further, we use hoc as the api, so we don't have to care about the state and methods."),Object(a.b)("h2",{id:"--usage"},"\ud83d\udcdf","\xa0"," Usage"),Object(a.b)("p",null,"Install the react-hooks you need "),Object(a.b)("p",null,"eg: ",Object(a.b)("inlineCode",{parentName:"p"},"@sunflower-antd/form-table")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"$ npm install @sunflower-antd/form-table --save\n")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import { useFormTable } from '@sunflower-antd/form-table';\n\nfunction Component(props) {\n  const { Form, Table } = useFormTable(config);\n  return <div>\n    <Form />\n    <Table />\n  </div>;\n}\n\nReactDOM.render(<Component />, mountNode);\n")))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/index.mdx"}}),r.isMDXComponent=!0}}]);